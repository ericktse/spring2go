<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.spring2go</groupId>
        <artifactId>spring2go-common</artifactId>
        <version>1.0.0</version>
    </parent>

    <artifactId>spring2go-common-swagger</artifactId>
    <description>swagger系统接口</description>

    <dependencies>

        <!--swagger初始化的过程中，
            由于实体类使用@ApiModelProperty时，example属性没有赋值导致的，
            在AbstractSerializableParameter的getExample方法中会将数值属性的example的转换数值类返回，
            example的默认值是""，因此当example没有赋值时，就会抛异常：Illegal DefaultValue null for parameter type integer
            swagger 1.5.21版本以上修复了这个问题，修改如下：
            if (example == null)改为if (example == null || example.isEmpty())
            所以显示引入1.5.21版本（谁先声明谁优先）
            @link:https://blog.csdn.net/weixin_44299027/article/details/105810872
            -->
        <dependency>
            <groupId>io.swagger</groupId>
            <artifactId>swagger-models</artifactId>
            <version>${swagger-models.version}</version>
        </dependency>

        <!-- swagger -->
        <!--        <dependency>-->
        <!--            <groupId>io.springfox</groupId>-->
        <!--            <artifactId>springfox-boot-starter</artifactId>-->
        <!--            <version>${springfox-boot-starter.version}</version>-->
        <!--        </dependency>-->

        <!--将springfox替换为knife4j,knife4j是为Java MVC框架集成Swagger生成Api文档的增强解决方案
        @link:https://xiaoym.gitee.io/knife4j/
        -->
        <dependency>
            <groupId>com.github.xiaoymin</groupId>
            <artifactId>knife4j-spring-boot-starter</artifactId>
            <version>${knife4j-spring-boot-starter.version}</version>
        </dependency>

        <!-- 网关 swagger 聚合服务 -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-gateway-server</artifactId>
            <scope>provided</scope>
        </dependency>
    </dependencies>


</project>
